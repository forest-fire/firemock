{"version":3,"file":"firemock.umd.js","sources":["esnext/util.js","esnext/database.js","esnext/mock.js","esnext/schema-helper.js","esnext/snapshot.js","esnext/queue.js","esnext/query.js","esnext/reference.js","esnext/pluralize.js","esnext/schema.js","esnext/Deployment.js","esnext/MockHelper.js"],"sourcesContent":["import { first, last } from \"lodash\";\nexport function normalizeRef(r) {\n    r = r.replace(\"/\", \".\");\n    r = r.slice(0, 1) === \".\" ? r.slice(1) : r;\n    return r;\n}\nexport function parts(r) {\n    return normalizeRef(r).split(\".\");\n}\n/**\n * return the last component of the path\n * which typically would represent the 'id'\n * of a list-node\n */\nexport function leafNode(r) {\n    return parts(r).pop();\n}\nexport function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nexport function firstProp(listOf) {\n    return listOf ? listOf[firstKey(listOf)] : {};\n}\nexport function lastProp(listOf) {\n    return listOf[lastKey(listOf)];\n}\nexport function objectIndex(obj, index) {\n    const keys = Object.keys(obj);\n    return keys ? obj[keys[index - 1]] : null;\n}\nexport function firstKey(listOf) {\n    return first(Object.keys(listOf));\n}\nexport function lastKey(listOf) {\n    return last(Object.keys(listOf));\n}\nexport function removeKeys(obj, remove) {\n    return Object.keys(obj).reduce((agg, v) => {\n        if (remove.indexOf(v) === -1) {\n            agg[v] = obj[v];\n        }\n        return agg;\n    }, {});\n}\n/**\n * Joins a set of paths together and converts into\n * correctly formatted \"dot notation\" directory path\n */\nexport function join(...paths) {\n    return paths\n        .map(p => {\n        return p.replace(/[\\/\\\\]/gm, \".\");\n    })\n        .map(p => (p.slice(-1) === \".\" ? p.slice(0, p.length - 1) : p))\n        .map(p => (p.slice(0, 1) === \".\" ? p.slice(1) : p))\n        .join(\".\");\n}\nexport function pathDiff(longPath, pathSubset) {\n    const subset = pathSubset.split(\".\");\n    const long = longPath.split(\".\");\n    if (subset.length > long.length ||\n        JSON.stringify(long.slice(0, subset.length)) !== JSON.stringify(subset)) {\n        throw new Error(`\"${pathSubset}\" is not a subset of ${longPath}`);\n    }\n    return long.length === subset.length\n        ? \"\"\n        : long.slice(subset.length - long.length).join(\".\");\n}\nexport function orderedSnapToJS(snap) {\n    const jsObject = {};\n    snap.forEach(record => (jsObject[record.key] = record.val()));\n    return jsObject;\n}\n/**\n * Given a path, returns the parent path and child key\n */\nexport function keyAndParent(dotPath) {\n    const sections = dotPath.split(\".\");\n    const key = sections.pop();\n    const parent = sections.join(\".\");\n    return { parent, key };\n}\n/** converts a '/' delimited path to a '.' delimited one */\nexport function dotNotation(path) {\n    path = path.slice(0, 1) === \"/\" ? path.slice(1) : path;\n    return path ? path.replace(/\\//g, \".\") : undefined;\n}\nexport function slashNotation(path) {\n    return path.replace(/\\./g, \"/\");\n}\n/** Get the parent DB path */\nexport function getParent(dotPath) {\n    return keyAndParent(dotPath).parent;\n}\n/** Get the Key from the end of a path string */\nexport function getKey(dotPath) {\n    return keyAndParent(dotPath).key;\n}\n/** named network delays */\nexport var Delays;\n(function (Delays) {\n    Delays[\"random\"] = \"random\";\n    Delays[\"weak\"] = \"weak-mobile\";\n    Delays[\"mobile\"] = \"mobile\";\n    Delays[\"WiFi\"] = \"WIFI\";\n})(Delays || (Delays = {}));\nlet _delay = 5;\nexport function setNetworkDelay(value) {\n    _delay = value;\n}\nexport function networkDelay(returnValue) {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            if (returnValue) {\n                resolve(returnValue);\n            }\n            else {\n                resolve();\n            }\n        }, calcDelay());\n    });\n}\nfunction calcDelay() {\n    const delay = _delay;\n    if (typeof delay === \"number\") {\n        return delay;\n    }\n    if (Array.isArray(delay)) {\n        const [min, max] = delay;\n        return getRandomInt(min, max);\n    }\n    if (typeof delay === \"object\" && !Array.isArray(delay)) {\n        const { min, max } = delay;\n        return getRandomInt(min, max);\n    }\n    // these numbers need some reviewing\n    if (delay === \"random\") {\n        return getRandomInt(10, 300);\n    }\n    if (delay === \"weak\") {\n        return getRandomInt(400, 900);\n    }\n    if (delay === \"mobile\") {\n        return getRandomInt(300, 500);\n    }\n    if (delay === \"WIFI\") {\n        return getRandomInt(10, 100);\n    }\n    throw new Error(\"Delay property is of unknown format: \" + delay);\n}\n","import { set, get } from \"lodash\";\nimport { key as fbKey } from \"firebase-key\";\nimport { join, pathDiff, getParent, getKey, keyAndParent } from \"./util\";\nimport { SnapShot } from \".\";\nexport let db = [];\nlet _listeners = [];\nexport function clearDatabase() {\n    db = {};\n}\nexport function updateDatabase(state) {\n    db = Object.assign({}, db, state);\n}\nexport function setDB(path, value) {\n    const dotPath = join(path);\n    const oldValue = get(db, dotPath);\n    set(db, dotPath, value);\n    notify(dotPath, value, oldValue);\n}\n/** single-path update */\nexport function updateDB(path, value) {\n    const dotPath = join(path);\n    const oldValue = get(db, dotPath);\n    const newValue = typeof oldValue === \"object\" ? Object.assign({}, oldValue, value) : value;\n    set(db, dotPath, newValue);\n    notify(dotPath, newValue, oldValue);\n}\nexport function multiPathUpdateDB(data) {\n    Object.keys(data).map(key => setDB(key, data[key]));\n}\nexport function removeDB(path) {\n    const dotPath = join(path);\n    const oldValue = get(db, dotPath);\n    const parentValue = get(db, getParent(dotPath));\n    if (typeof parentValue === \"object\") {\n        delete parentValue[getKey(dotPath)];\n        set(db, getParent(dotPath), parentValue);\n    }\n    else {\n        set(db, dotPath, undefined);\n    }\n    notify(dotPath, undefined, oldValue);\n}\nexport function pushDB(path, value) {\n    const pushId = fbKey();\n    const fullPath = join(path, pushId);\n    setDB(fullPath, value);\n    return pushId;\n}\nexport function addListener(path, eventType, callback, cancelCallbackOrContext, context) {\n    _listeners.push({\n        path: join(path),\n        eventType,\n        callback,\n        cancelCallbackOrContext,\n        context\n    });\n}\nexport function removeListener(eventType, callback, context) {\n    if (!eventType) {\n        return removeAllListeners();\n    }\n    if (!callback) {\n        const removed = _listeners.filter(l => l.eventType === eventType);\n        _listeners = _listeners.filter(l => l.eventType !== eventType);\n        return cancelCallback(removed);\n    }\n    if (!context) {\n        const removed = _listeners\n            .filter(l => l.callback === callback)\n            .filter(l => l.eventType === eventType);\n        _listeners = _listeners.filter(l => l.eventType !== eventType || l.callback !== callback);\n        return cancelCallback(removed);\n    }\n    else {\n        const removed = _listeners\n            .filter(l => l.callback === callback)\n            .filter(l => l.eventType === eventType)\n            .filter(l => l.context === context);\n        _listeners = _listeners.filter(l => l.context !== context || l.callback !== callback || l.eventType !== eventType);\n        return cancelCallback(removed);\n    }\n}\nfunction cancelCallback(removed) {\n    let count = 0;\n    removed.forEach(l => {\n        if (typeof l.cancelCallbackOrContext === \"function\") {\n            l.cancelCallbackOrContext();\n            count++;\n        }\n    });\n    return count;\n}\nexport function removeAllListeners() {\n    const howMany = cancelCallback(_listeners);\n    _listeners = [];\n    return howMany;\n}\nexport function listenerCount(type) {\n    return type ? _listeners.filter(l => l.eventType === type).length : _listeners.length;\n}\nexport function listenerPaths(type) {\n    return type\n        ? _listeners.filter(l => l.eventType === type).map(l => l.path)\n        : _listeners.map(l => l.path);\n}\n/**\n * Notifies all appropriate \"child\" event listeners when changes\n * in state happen\n *\n * @param dotPath the path where the change was made\n * @param newValue the new value\n * @param oldValue the prior value\n */\nfunction notify(dotPath, newValue, oldValue) {\n    if (JSON.stringify(newValue) !== JSON.stringify(oldValue)) {\n        findValueListeners(dotPath).map(l => {\n            let result = {};\n            const listeningRoot = get(db, l.path);\n            if (typeof listeningRoot === \"object\" && !newValue) {\n                result = get(db, l.path);\n                delete result[getKey(dotPath)];\n            }\n            else {\n                set(result, pathDiff(dotPath, l.path), newValue);\n            }\n            return l.callback(new SnapShot(join(l.path), result));\n        });\n        if (newValue === undefined) {\n            const { parent, key } = keyAndParent(dotPath);\n            findChildListeners(parent, \"child_removed\", \"child_changed\").forEach(l => {\n                return l.callback(new SnapShot(key, newValue));\n            });\n        }\n        else if (oldValue === undefined) {\n            const { parent, key } = keyAndParent(dotPath);\n            findChildListeners(parent, \"child_added\", \"child_changed\").forEach(l => {\n                return l.callback(new SnapShot(key, newValue));\n            });\n        }\n    }\n}\n/**\n * Finds \"child events\" listening to a given parent path; optionally\n * allowing for specification of the specific event type\n *\n * @param path the parent path that children are detected off of\n * @param eventType <optional> the specific child event to filter down to\n */\nexport function findChildListeners(path, ...eventType) {\n    const correctPath = _listeners.filter(l => l.path === join(path) && l.eventType !== \"value\");\n    return eventType.length > 0\n        ? correctPath.filter(l => eventType.indexOf(l.eventType) !== -1)\n        : correctPath;\n}\n/**\n * Finds all value listeners on a given path or below.\n * Unlike child listeners, Value listeners listen to changes at\n * all points below the registered path.\n *\n * @param path path to root listening point\n */\nexport function findValueListeners(path) {\n    return _listeners.filter(l => join(path).indexOf(join(l.path)) !== -1 && l.eventType === \"value\");\n}\n/** Clears the DB and removes all listeners */\nexport function reset() {\n    removeAllListeners();\n    clearDatabase();\n}\n","import { Queue, Schema, Reference, Deployment } from \"./index\";\nimport { db, clearDatabase, updateDatabase } from \"./database\";\nimport { setNetworkDelay } from \"./util\";\n/* tslint:disable:max-classes-per-file */\nexport default class Mock {\n    constructor(raw) {\n        this._schemas = new Queue(\"schemas\").clear();\n        this._relationships = new Queue(\"relationships\").clear();\n        this._queues = new Queue(\"queues\").clear();\n        Queue.clearAll();\n        clearDatabase();\n        if (raw) {\n            this.updateDB(raw);\n        }\n    }\n    /**\n     * Update the mock DB with a raw JS object/hash\n     */\n    updateDB(state) {\n        updateDatabase(state);\n    }\n    get db() {\n        return db;\n    }\n    addSchema(schema, mock) {\n        const s = new Schema(schema);\n        if (mock) {\n            s.mock(mock);\n        }\n        return new Schema(schema);\n    }\n    /** Set the network delay for queries with \"once\" */\n    setDelay(d) {\n        setNetworkDelay(d);\n    }\n    get deploy() {\n        return new Deployment();\n    }\n    queueSchema(schemaId, quantity = 1, overrides = {}) {\n        const d = new Deployment();\n        d.queueSchema(schemaId, quantity, overrides);\n        return d;\n    }\n    generate() {\n        return new Deployment().generate();\n    }\n    ref(dbPath) {\n        return new Reference(dbPath);\n    }\n}\n","export default class SchemaHelper {\n    constructor(raw) {\n        this._db = raw;\n    }\n    get faker() {\n        const faker = require(\"faker\");\n        return faker;\n    }\n    get chance() {\n        const chance = require(\"chance\");\n        return chance();\n    }\n}\n","import { get } from \"lodash\";\nimport Reference from \"./reference\";\nimport * as convert from \"typed-conversions\";\nimport { getKey, join } from \"./util\";\nexport default class SnapShot {\n    constructor(_key, _value) {\n        this._key = _key;\n        this._value = _value;\n    }\n    get key() {\n        return getKey(join(this._key));\n    }\n    get ref() {\n        return new Reference(this._key);\n    }\n    val() {\n        return Array.isArray(this._value) ? convert.arrayToHash(this._value) : this._value;\n    }\n    toJSON() {\n        return JSON.stringify(this._value);\n    }\n    child(path) {\n        const value = get(this._value, path, null);\n        return value ? new SnapShot(path, value) : null;\n    }\n    hasChild(path) {\n        if (typeof this._value === \"object\") {\n            return Object.keys(this._value).indexOf(path) !== -1;\n        }\n        return false;\n    }\n    hasChildren() {\n        if (typeof this._value === \"object\") {\n            return Object.keys(this._value).length > 0;\n        }\n        return false;\n    }\n    numChildren() {\n        if (typeof this._value === \"object\") {\n            return Object.keys(this._value).length;\n        }\n        return 0;\n    }\n    exists() {\n        return this._value !== null;\n    }\n    forEach(actionCb) {\n        const cloned = this._value.slice(0);\n        const sorted = cloned.sort(this._sortingFunction);\n        sorted.map((item) => {\n            const noId = Object.assign({}, item);\n            delete noId.id;\n            const halt = actionCb(new SnapShot(item.id, noId));\n            if (halt) {\n                return true;\n            }\n        });\n        return false;\n    }\n    /** NOTE: mocking proxies this call through to val(), no use of \"priority\" */\n    exportVal() {\n        return this.val();\n    }\n    getPriority() {\n        return null;\n    }\n    /**\n     * Used by Query objects to instruct the snapshot the sorting function to use\n     */\n    sortingFunction(fn) {\n        this._sortingFunction = fn;\n        return this;\n    }\n}\n","import { first } from \"lodash\";\nimport * as fbKey from \"firebase-key\";\n/**\n * Queue Class\n *\n * A generic class for building singleton queues;\n * this is used as a container for schemas, deployment queues,\n * and relationships\n */\nexport default class Queue {\n    constructor(_name) {\n        this._name = _name;\n        this.pkProperty = \"id\";\n        if (!_name) {\n            throw new Error(\"A queue MUST have a named passed in to be managed\");\n        }\n        if (!Queue._queues[_name]) {\n            Queue._queues[_name] = [];\n        }\n    }\n    static clearAll() {\n        Queue._queues = {};\n    }\n    get name() {\n        return this._name;\n    }\n    /**\n     * Allows adding another item to the queue. It is expected\n     * that this item WILL have the primary key included ('id' by\n     * default)\n     */\n    enqueue(queueItem) {\n        Queue._queues[this._name].push(queueItem);\n        return this;\n    }\n    /**\n     * Similar to enqueue but the primary key is generated and passed\n     * back to the caller.\n     */\n    push(queueItem) {\n        const id = fbKey.key();\n        if (typeof queueItem !== \"object\") {\n            throw new Error(\"Using push() requires that the payload is an object\");\n        }\n        queueItem[this.pkProperty] = id;\n        this.enqueue(queueItem);\n        return id;\n    }\n    /**\n     * By passing in the key you will remove the given item from the queue\n     */\n    dequeue(key) {\n        const queue = Queue._queues[this._name];\n        if (queue.length === 0) {\n            throw new Error(`Queue ${this._name} is empty. Can not dequeue ${key}.`);\n        }\n        Queue._queues[this._name] =\n            typeof first(queue) === \"object\"\n                ? queue.filter((item) => item[this.pkProperty] !== key)\n                : queue.filter((item) => item !== key);\n        return this;\n    }\n    fromArray(payload) {\n        Queue._queues[this._name] = payload;\n        return this;\n    }\n    clear() {\n        Queue._queues[this._name] = [];\n        return this;\n    }\n    find(key) {\n        const [obj, index] = this._find(key);\n        return obj;\n    }\n    indexOf(key) {\n        const [obj, index] = this._find(key);\n        return index;\n    }\n    includes(key) {\n        return this.find(key) ? true : false;\n    }\n    replace(key, value) {\n        value[this.pkProperty] = key;\n        this.dequeue(key).enqueue(value);\n        return this;\n    }\n    update(key, value) {\n        const currently = this.find(key);\n        if (currently) {\n            this.dequeue(key);\n        }\n        if (typeof currently === \"object\" && typeof value === \"object\") {\n            value[this.pkProperty] = key;\n            const updated = Object.assign({}, currently, value);\n            this.enqueue(updated);\n        }\n        else {\n            throw new Error(`Current and updated values must be objects!`);\n        }\n        return this;\n    }\n    get length() {\n        return Queue._queues[this._name].length;\n    }\n    /** returns the Queue as a JS array */\n    toArray() {\n        return Queue._queues && Queue._queues[this._name] ? Queue._queues[this._name] : [];\n    }\n    /** returns the Queue as a JS Object */\n    toHash() {\n        const queue = Queue._queues[this._name];\n        if (!queue || queue.length === 0) {\n            return new Object();\n        }\n        return typeof first(queue) === \"object\"\n            ? queue.reduce((obj, item) => {\n                const pk = item[this.pkProperty];\n                // tslint:disable-next-line\n                const o = Object.assign({}, item);\n                delete o[this.pkProperty];\n                return Object.assign({}, obj, { [pk]: o });\n            }, new Object())\n            : queue.reduce((obj, item) => (obj = Object.assign({}, obj, { [item]: true })), new Object());\n    }\n    map(fn) {\n        const queuedSchemas = Queue._queues[this._name];\n        return queuedSchemas ? queuedSchemas.map(fn) : [];\n    }\n    filter(fn) {\n        const queue = Queue._queues[this._name];\n        return queue ? queue.filter(fn) : [];\n    }\n    toJSON() {\n        return JSON.stringify(Queue._queues);\n    }\n    toObject() {\n        return Queue._queues;\n    }\n    _find(key) {\n        const queue = Queue._queues[this._name];\n        const objectPayload = typeof first(queue) === \"object\";\n        let index = 0;\n        let result = [null, -1];\n        for (const item of queue) {\n            const condition = objectPayload ? item[this.pkProperty] === key : item === key;\n            if (condition) {\n                result = [item, index];\n                break;\n            }\n            index++;\n        }\n        return result;\n    }\n}\nQueue._queues = {};\n","import { db, addListener } from \"./database\";\nimport { get } from \"lodash\";\nimport SnapShot from \"./snapshot\";\nimport Queue from \"./queue\";\nimport * as convert from \"typed-conversions\";\nimport Reference from \"./reference\";\nimport { join, leafNode, networkDelay } from \"./util\";\nexport var OrderingType;\n(function (OrderingType) {\n    OrderingType[\"byChild\"] = \"child\";\n    OrderingType[\"byKey\"] = \"key\";\n    OrderingType[\"byValue\"] = \"value\";\n})(OrderingType || (OrderingType = {}));\n/** tslint:ignore:member-ordering */\nexport default class Query {\n    constructor(path, _delay = 5) {\n        this.path = path;\n        this._delay = _delay;\n        this._order = { type: OrderingType.byKey, value: null };\n        this._listeners = new Queue(\"listeners\");\n        this._limitFilters = [];\n        this._queryFilters = [];\n    }\n    get ref() {\n        return new Reference(this.path, this._delay);\n    }\n    limitToLast(num) {\n        const filter = resultset => {\n            return resultset.slice(resultset.length - num);\n        };\n        this._limitFilters.push(filter);\n        return this;\n    }\n    limitToFirst(num) {\n        const filter = resultset => {\n            return resultset.slice(0, num);\n        };\n        this._limitFilters.push(filter);\n        return this;\n    }\n    equalTo(value, key) {\n        if (key && this._order.type === OrderingType.byKey) {\n            throw new Error(\"You can not use equalTo's key property when using a key sort!\");\n        }\n        key = key ? key : this._order.value;\n        const filter = (resultset) => {\n            let comparison = item => item[key];\n            if (!key) {\n                switch (this._order.type) {\n                    case OrderingType.byChild:\n                        comparison = item => item[this._order.value];\n                        break;\n                    case OrderingType.byKey:\n                        comparison = item => item.id;\n                        break;\n                    case OrderingType.byValue:\n                        comparison = item => item;\n                        break;\n                    default:\n                        throw new Error(\"unknown ordering type: \" + this._order.type);\n                }\n            }\n            return resultset.filter((item) => comparison(item) === value);\n        };\n        this._queryFilters.push(filter);\n        return this;\n    }\n    /** Creates a Query with the specified starting point. */\n    startAt(value, key) {\n        key = key ? key : this._order.value;\n        const filter = resultset => {\n            return resultset.filter((record) => {\n                return key ? record[key] >= value : record >= value;\n            });\n        };\n        this._queryFilters.push(filter);\n        return this;\n    }\n    endAt(value, key) {\n        key = key ? key : this._order.value;\n        const filter = resultset => {\n            return resultset.filter((record) => {\n                return key ? record[key] <= value : record <= value;\n            });\n        };\n        this._queryFilters.push(filter);\n        return this;\n    }\n    on(eventType, callback, cancelCallbackOrContext, context) {\n        addListener(this.path, eventType, callback, cancelCallbackOrContext, context);\n        return null;\n    }\n    once(eventType) {\n        return networkDelay(this.process());\n    }\n    off() {\n        console.log(\"off() not implemented yet\");\n    }\n    /** NOT IMPLEMENTED YET */\n    isEqual(other) {\n        return false;\n    }\n    /**\n     * When the children of a query are all objects, then you can sort them by a\n     * specific property. Note: if this happens a lot then it's best to explicitly\n     * index on this property in the database's config.\n     */\n    orderByChild(prop) {\n        this._order = {\n            type: OrderingType.byChild,\n            value: prop\n        };\n        return this;\n    }\n    /**\n     * When the children of a query are all scalar values (string, number, boolean), you\n     * can order the results by their (ascending) values\n     */\n    orderByValue() {\n        this._order = {\n            type: OrderingType.byValue,\n            value: null\n        };\n        return this;\n    }\n    /**\n     * This is the default sort\n     */\n    orderByKey() {\n        this._order = {\n            type: OrderingType.byKey,\n            value: null\n        };\n        return this;\n    }\n    /** NOT IMPLEMENTED */\n    orderByPriority() {\n        return this;\n    }\n    toJSON() {\n        return {\n            identity: this.toString(),\n            delay: this._delay,\n            ordering: this._order,\n            numListeners: this._listeners.length,\n            queryFilters: this._queryFilters.length > 0 ? this._queryFilters : \"none\",\n            limitFilters: this._limitFilters.length > 0 ? this._limitFilters : \"none\"\n        };\n    }\n    toString() {\n        return `FireMock::Query@${process.env.FIREBASE_DATA_ROOT_URL}/${this.path}`;\n    }\n    /**\n     * This is an undocumented API endpoint that is within the\n     * typing provided by Google\n     */\n    getKey() {\n        return null;\n    }\n    /**\n     * This is an undocumented API endpoint that is within the\n     * typing provided by Google\n     */\n    getParent() {\n        return null;\n    }\n    /**\n     * This is an undocumented API endpoint that is within the\n     * typing provided by Google\n     */\n    getRoot() {\n        return null;\n    }\n    /**\n     * Reduce the dataset using filters (after sorts) but do not apply sort\n     * order to new SnapShot (so natural order is preserved)\n     */\n    process() {\n        // typically a hash/object but could be a scalar type (string/number/boolean)\n        const input = get(db, join(this.path), undefined);\n        const hashOfHashes = typeof input === \"object\" &&\n            Object.keys(input).every(i => typeof input[i] === \"object\");\n        let snap;\n        if (!hashOfHashes) {\n            snap = new SnapShot(leafNode(this.path), input);\n        }\n        else {\n            const mockDatabaseResults = convert.hashToArray(input);\n            const sorted = this.processSorting(mockDatabaseResults);\n            const remainingIds = this.processFilters(sorted).map((f) => (typeof f === \"object\" ? f.id : f));\n            snap = new SnapShot(leafNode(this.path), mockDatabaseResults.filter((record) => remainingIds.indexOf(record.id) !== -1));\n        }\n        snap.sortingFunction(this.getSortingFunction(this._order));\n        return snap;\n    }\n    /**\n     * Processes all Filter Queries to reduce the resultset\n     */\n    processFilters(inputArray) {\n        let output = inputArray.slice(0);\n        this._queryFilters.forEach(q => (output = q(output)));\n        this._limitFilters.forEach(q => (output = q(output)));\n        return output;\n    }\n    processSorting(inputArray) {\n        const sortFn = this.getSortingFunction(this._order);\n        const sorted = inputArray.slice(0).sort(sortFn);\n        return sorted;\n    }\n    /**\n     * Returns a sorting function for the given Sort Type\n     */\n    getSortingFunction(sortType) {\n        let sort;\n        switch (sortType.type) {\n            case OrderingType.byKey:\n                sort = (a, b) => {\n                    return a.id > b.id ? -1 : a.id === b.id ? 0 : 1;\n                };\n                break;\n            case OrderingType.byValue:\n                sort = (a, b) => {\n                    return a.value > b.value ? -1 : a.value === b.value ? 0 : 1;\n                };\n                break;\n            case OrderingType.byChild:\n                const child = this._order.value;\n                sort = (a, b) => {\n                    return a[child] > b[child] ? -1 : a[child] === b[child] ? 0 : 1;\n                };\n                break;\n        }\n        return sort;\n    }\n}\n","import Query from \"./query\";\nimport { get } from \"lodash\";\nimport { db, setDB, updateDB, pushDB, removeDB, multiPathUpdateDB } from \"./database\";\nimport { parts, join, slashNotation, networkDelay } from \"./util\";\nfunction isMultiPath(data) {\n    Object.keys(data).map((d) => {\n        if (!d) {\n            data[d] = \"/\";\n        }\n    });\n    const indexesAreStrings = Object.keys(data).every(i => typeof i === \"string\");\n    const indexesLookLikeAPath = Object.keys(data).every(i => i.indexOf(\"/\") !== -1);\n    return indexesAreStrings && indexesLookLikeAPath ? true : false;\n}\nexport default class Reference extends Query {\n    get key() {\n        return this.path.split(\".\").pop();\n    }\n    get parent() {\n        const r = parts(this.path)\n            .slice(-1)\n            .join(\".\");\n        return new Reference(r, get(db, r));\n    }\n    child(path) {\n        const r = parts(this.path)\n            .concat([path])\n            .join(\".\");\n        return new Reference(r, get(db, r));\n    }\n    get root() {\n        return new Reference(\"/\", db);\n    }\n    push(value, onComplete) {\n        const id = pushDB(this.path, value);\n        this.path = join(this.path, id);\n        if (onComplete) {\n            onComplete(null);\n        }\n        return networkDelay(this); // TODO: try and get this typed appropriately\n    }\n    remove(onComplete) {\n        removeDB(this.path);\n        if (onComplete) {\n            onComplete(null);\n        }\n        return networkDelay();\n    }\n    set(value, onComplete) {\n        setDB(this.path, value);\n        if (onComplete) {\n            onComplete(null);\n        }\n        return networkDelay();\n    }\n    update(values, onComplete) {\n        if (isMultiPath(values)) {\n            multiPathUpdateDB(values);\n        }\n        else {\n            updateDB(this.path, values);\n        }\n        if (onComplete) {\n            onComplete(null);\n        }\n        return networkDelay();\n    }\n    setPriority(priority, onComplete) {\n        return networkDelay();\n    }\n    setWithPriority(newVal, newPriority, onComplete) {\n        return networkDelay();\n    }\n    transaction(transactionUpdate, onComplete, applyLocally) {\n        return Promise.resolve({\n            committed: true,\n            snapshot: null,\n            toJSON() {\n                return {};\n            }\n        });\n    }\n    onDisconnect() {\n        return {};\n    }\n    toString() {\n        return this.path\n            ? slashNotation(join(\"FireMock::Reference@\", this.path, this.key))\n            : \"FireMock::Reference@uninitialized (aka, no path) mock Reference object\";\n    }\n}\n","const exceptions = {\n    child: 'children',\n    man: 'men',\n    woman: 'women',\n    tooth: 'teeth',\n    foot: 'feet',\n    mouse: 'mice',\n    person: 'people',\n    company: 'companies'\n};\n/**\n * Exceptions when moving from plural to singular\n */\nconst singularExceptions = () => {\n    return Object.keys(pluralize).reduce((agg, k) => agg[exceptions[k]] = k, new Object());\n};\nexport default function pluralize(singular) {\n    const rules = [\n        { find: /(.*)(ch|sh|ax|ss)$/, replace: '$1$2es' },\n        { find: /(.*)(fe|f)$/, replace: '$1ves' },\n        { find: /(.*)us$/, replace: '$1i' }\n    ];\n    for (const r of rules) {\n        if (r.find.test(singular)) {\n            return singular.replace(r.find, r.replace);\n        }\n    }\n    return exceptions[singular] ? exceptions[singular] : `${singular}s`;\n}\n;\nexport const addException = (singular, plural) => {\n    exceptions[singular] = plural;\n};\nexport const singularize = (plural) => {\n    //\n};\n","import Queue from \"./queue\";\nimport SchemaHelper from \"./schema-helper\";\nimport pluralize, { addException } from \"./pluralize\";\nexport default class Schema {\n    constructor(schemaId) {\n        this.schemaId = schemaId;\n        this._schemas = new Queue(\"schemas\");\n        this._relationships = new Queue(\"relationships\");\n        this._prefix = \"\";\n    }\n    /**\n     * Add a mocking function to be used to generate the schema in mock DB\n     */\n    mock(cb) {\n        this._schemas.enqueue({\n            id: this.schemaId,\n            fn: cb(new SchemaHelper({})),\n            path: () => {\n                const schema = this._schemas.find(this.schemaId);\n                return [\n                    schema.prefix,\n                    schema.modelName ? pluralize(schema.modelName) : pluralize(this.schemaId)\n                ].join(\"/\");\n            }\n        });\n        return this;\n    }\n    /**\n     * There are times where it's appropriate to have multiple schemas for\n     * the same entity/model, in this case you'll want to state what model\n     * your schema is emulating. If you don't state this property it assumes\n     * the schema name IS the model name\n     */\n    modelName(value) {\n        this._schemas.update(this.schemaId, { modelName: value });\n        return this;\n    }\n    /** prefixes a static path to the beginning of the  */\n    pathPrefix(prefix) {\n        prefix = prefix.replace(/\\./g, \"/\"); // slash reference preferred over dot\n        prefix = prefix.slice(-1) === \"/\" ? prefix.slice(0, prefix.length - 1) : prefix;\n        this._schemas.update(this.schemaId, { prefix });\n        return this;\n    }\n    /**\n     * The default pluralizer is quite simple so if you find that\n     * it is pluralizing incorrectly then you can manually state\n     * the plural name.\n     */\n    pluralName(plural) {\n        const model = this._schemas.find(this.schemaId).modelName\n            ? this._schemas.find(this.schemaId).modelName\n            : this.schemaId;\n        addException(model, plural);\n        return this;\n    }\n    /**\n     * Configures a \"belongsTo\" relationship with another schema/entity\n     */\n    belongsTo(target, sourceProperty) {\n        this._relationships.push({\n            type: \"belongsTo\",\n            source: this.schemaId,\n            target,\n            sourceProperty: sourceProperty ? sourceProperty : `${target}Id`\n        });\n        return this;\n    }\n    /**\n     * Configures a \"hasMany\" relationship with another schema/entity\n     */\n    hasMany(target, sourceProperty) {\n        this._relationships.push({\n            type: \"hasMany\",\n            source: this.schemaId,\n            target,\n            sourceProperty: sourceProperty ? sourceProperty : pluralize(target)\n        });\n        return this;\n    }\n    /** Add another schema */\n    addSchema(schema, mock) {\n        const s = new Schema(schema);\n        if (mock) {\n            s.mock(mock);\n        }\n        return new Schema(schema);\n    }\n}\n","import * as fbKey from \"firebase-key\";\nimport { set, get, first } from \"lodash\";\nimport { getRandomInt, dotNotation } from \"./util\";\nimport Queue from \"./queue\";\nimport pluralize from \"./pluralize\";\nimport { db } from \"./database\";\nexport default class Deployment {\n    constructor() {\n        this._queue = new Queue(\"queue\");\n        this._schemas = new Queue(\"schemas\");\n        this._relationships = new Queue(\"relationships\");\n    }\n    /**\n     * Queue a schema for deployment to the mock DB\n     */\n    queueSchema(\n    /** A unique reference to the schema being queued for generation */\n    schemaId, \n    /** The number of this schema to generate */\n    quantity = 1, \n    /** Properties in the schema template which should be overriden with a static value */\n    overrides = {}) {\n        this.schemaId = schemaId;\n        this.queueId = fbKey.key();\n        const schema = this._schemas.find(schemaId);\n        if (!schema) {\n            console.log(`Schema \"${schema}\" does not exist; will SKIP.`);\n        }\n        else {\n            const newQueueItem = {\n                id: this.queueId,\n                schema: schemaId,\n                prefix: schema.prefix,\n                quantity,\n                overrides\n            };\n            this._queue.enqueue(newQueueItem);\n        }\n        return this;\n    }\n    /**\n     * Provides specificity around how many of a given\n     * \"hasMany\" relationship should be fulfilled of\n     * the schema currently being queued.\n     */\n    quantifyHasMany(targetSchema, quantity) {\n        const hasMany = this._relationships.filter(r => r.type === \"hasMany\" && r.source === this.schemaId);\n        const targetted = hasMany.filter(r => r.target === targetSchema);\n        if (hasMany.length === 0) {\n            console.log(`Attempt to quantify \"hasMany\" relationships with schema \"${this.schemaId}\" is not possible; no such relationships exist`);\n        }\n        else if (targetted.length === 0) {\n            console.log(`The \"${targetSchema}\" schema does not have a \"hasMany\" relationship with the \"${this.schemaId}\" model`);\n        }\n        else {\n            const queue = this._queue.find(this.queueId);\n            this._queue.update(this.queueId, {\n                hasMany: Object.assign({}, queue.hasMany, { [pluralize(targetSchema)]: quantity })\n            });\n        }\n        return this;\n    }\n    /**\n     * Indicates the a given \"belongsTo\" should be fulfilled with a\n     * valid FK reference when this queue is generated.\n     */\n    fulfillBelongsTo(targetSchema) {\n        const schema = this._schemas.find(this.schemaId);\n        const relationship = first(this._relationships\n            .filter(r => r.source === this.schemaId)\n            .filter(r => r.target === targetSchema));\n        const sourceProperty = schema.path();\n        const queue = this._queue.find(this.queueId);\n        this._queue.update(this.queueId, {\n            belongsTo: Object.assign({}, queue.belongsTo, { [`${targetSchema}Id`]: true })\n        });\n        return this;\n    }\n    generate() {\n        this._queue.map((q) => {\n            for (let i = q.quantity; i > 0; i--) {\n                this.insertMockIntoDB(q.schema, q.overrides);\n            }\n        });\n        this._queue.map((q) => {\n            for (let i = q.quantity; i > 0; i--) {\n                this.insertRelationshipLinks(q);\n            }\n        });\n        this._queue.clear();\n    }\n    insertMockIntoDB(schemaId, overrides) {\n        const schema = this._schemas.find(schemaId);\n        const mock = schema.fn();\n        const path = schema.path();\n        const key = fbKey.key();\n        set(db, dotNotation(path) + `.${key}`, typeof mock === \"object\"\n            ? Object.assign({}, mock, overrides) : overrides && typeof overrides !== \"object\"\n            ? overrides\n            : mock);\n        return key;\n    }\n    insertRelationshipLinks(queue) {\n        const relationships = this._relationships.filter(r => r.source === queue.schema);\n        const belongsTo = relationships.filter(r => r.type === \"belongsTo\");\n        const hasMany = relationships.filter(r => r.type === \"hasMany\");\n        belongsTo.forEach(r => {\n            const fulfill = Object.keys(queue.belongsTo || {})\n                .filter(v => queue.belongsTo[v] === true)\n                .indexOf(r.sourceProperty) !== -1;\n            const source = this._schemas.find(r.source);\n            const target = this._schemas.find(r.target);\n            let getID;\n            if (fulfill) {\n                const mockAvailable = this._schemas.find(r.target) ? true : false;\n                const available = Object.keys(db[pluralize(r.target)] || {});\n                const generatedAvailable = available.length > 0;\n                const numChoices = (db[r.target] || []).length;\n                const choice = () => generatedAvailable\n                    ? available[getRandomInt(0, available.length - 1)]\n                    : this.insertMockIntoDB(r.target, {});\n                getID = () => mockAvailable\n                    ? generatedAvailable\n                        ? choice()\n                        : this.insertMockIntoDB(r.target, {})\n                    : fbKey.key();\n            }\n            else {\n                getID = () => \"\";\n            }\n            const property = r.sourceProperty;\n            const path = source.path();\n            const recordList = get(db, dotNotation(source.path()), {});\n            Object.keys(recordList).forEach(key => {\n                set(db, `${dotNotation(source.path())}.${key}.${property}`, getID());\n            });\n        });\n        hasMany.forEach(r => {\n            const fulfill = Object.keys(queue.hasMany || {}).indexOf(r.sourceProperty) !== -1;\n            const howMany = fulfill ? queue.hasMany[r.sourceProperty] : 0;\n            const source = this._schemas.find(r.source);\n            const target = this._schemas.find(r.target);\n            let getID;\n            if (fulfill) {\n                const mockAvailable = this._schemas.find(r.target) ? true : false;\n                const available = Object.keys(db[pluralize(r.target)] || {});\n                const used = [];\n                const generatedAvailable = available.length > 0;\n                const numChoices = (db[pluralize(r.target)] || []).length;\n                const choice = (pool) => {\n                    if (pool.length > 0) {\n                        const chosen = pool[getRandomInt(0, pool.length - 1)];\n                        used.push(chosen);\n                        return chosen;\n                    }\n                    return this.insertMockIntoDB(r.target, {});\n                };\n                getID = () => mockAvailable\n                    ? choice(available.filter(a => used.indexOf(a) === -1))\n                    : fbKey.key();\n            }\n            else {\n                getID = () => undefined;\n            }\n            const property = r.sourceProperty;\n            const path = source.path();\n            const sourceRecords = get(db, dotNotation(source.path()), {});\n            Object.keys(sourceRecords).forEach(key => {\n                for (let i = 1; i <= howMany; i++) {\n                    set(db, `${dotNotation(source.path())}.${key}.${property}.${getID()}`, true);\n                }\n            });\n        });\n    }\n}\n","export class MockHelper {\n    constructor(context) {\n        this.context = context;\n    }\n    get faker() {\n        const faker = require(\"faker\");\n        return faker;\n    }\n    get chance() {\n        const chance = require(\"chance\");\n        return chance();\n    }\n}\n"],"names":["get","set","fbKey","SnapShot","Mock","convert.arrayToHash","fbKey.key","first","convert.hashToArray"],"mappings":"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"}